server:
  port: 8080

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO
    org.springframework.boot.autoconfigure: INFO

ping:
  environmentId: xxxxxx

oauth2:
  client:
    clientId: xxxxxx
    clientSecret: xxxxxx
    accessTokenUri: https://auth.pingone.com/xxxxxx/as/token
    userAuthorizationUri: https://auth.pingone.com/xxxxxx/as/authorize
    scope: openid,profile,p1:create:env:user,p1:read:env:user,p1:delete:env:user,p1:read:env:population,p1:read:env:userPassword,p1:set:env:userPassword,p1:read:env:passwordPolicy,p1:recover:env:userPassword
    authorizationGrantType: client_credentials

spring:
  thymeleaf:
    cache: false

  security:
    oauth2:
      client:
        registration:
          pingidentity:
            client-name: pingidentity login
            client-id: xxxxxx
            client-secret: xxxxxx
            provider: pingidentity
            scope: openid,profile,phone,email,address,p1:reset:self:userPassword
            client-authentication-method: post
            authorization-grant-type: authorization_code
            redirect-uri-template: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          pingidentity:
            issuer-uri: https://auth.pingone.com/xxxxxx/as
  mvc:
    favicon:
      enabled: false

